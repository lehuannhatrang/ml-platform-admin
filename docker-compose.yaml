version: '3'

services:
  # PostgreSQL database for OpenFGA
  postgres:
    image: postgres:17
    container_name: postgres
    command: postgres -c 'max_connections=100'
    networks:
      - ml-platform-network
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # OpenFGA migration
  migrate:
    depends_on:
      postgres:
        condition: service_healthy
    image: openfga/openfga:latest
    container_name: migrate
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@postgres:5432/postgres?sslmode=disable
    command: migrate
    networks:
      - ml-platform-network

  # OpenFGA service
  openfga:
    depends_on:
      migrate:
        condition: service_completed_successfully
    image: openfga/openfga:latest
    container_name: openfga
    command: run
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@postgres:5432/postgres?sslmode=disable
      - OPENFGA_DATASTORE_MAX_OPEN_CONNS=100
      - OPENFGA_PLAYGROUND_ENABLED=true
    networks:
      - ml-platform-network
    ports:
      - "8080:8080" # http
      - "8081:8081" # grpc
      - "3000:3000" # playground
    healthcheck:
      test: ["CMD", "/usr/local/bin/grpc_health_probe", "-addr=openfga:8081"]
      interval: 5s
      timeout: 30s
      retries: 3

  # etcd service for ml-platform-admin
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: ml-platform-admin-etcd
    command:
      - /usr/local/bin/etcd
      - --advertise-client-urls=http://0.0.0.0:2379
      - --listen-client-urls=http://0.0.0.0:2379
      - --data-dir=/etcd-data
    volumes:
      - etcd-data:/etcd-data
    networks:
      - ml-platform-network
    ports:
      - "2379:2379"
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 5s
      timeout: 5s
      retries: 5

  # ml-platform-admin API
  ml-platform-admin-api:
    image: lehuannhatrang/ml-platform-admin-api:v0.46
    container_name: ml-platform-admin-api
    depends_on:
      etcd:
        condition: service_healthy
      openfga:
        condition: service_healthy
    volumes:
      - ./artifacts/kubeconfig:/etc/karmada/kubeconfig
    command:
      - /bin/ml-platform-admin-api
      - --bind-address=0.0.0.0
      - --kubeconfig=/etc/karmada/kubeconfig/mgmt-cluster.config
      - --karmada-kubeconfig=/etc/karmada/kubeconfig/karmada-apiserver.config
      - --etcd-host=etcd
      - --etcd-port=2379
      - --openfga-api-url=http://openfga:8080
      - --insecure-bind-address=0.0.0.0
    networks:
      - ml-platform-network
    ports:
      - "8000:8000" # HTTP
      - "8001:8001" # HTTPS

  # ml-platform-admin Web
  ml-platform-admin-web:
    image: lehuannhatrang/ml-platform-admin-web:v0.46
    container_name: ml-platform-admin-web
    depends_on:
      - ml-platform-admin-api
    volumes:
      - ./artifacts/dashboard/karmada-dashboard-configmap.yaml:/etc/karmada/config/dashboard-configmap.yaml
    command:
      - ml-platform-admin-web
      - --static-dir=/static
      - --insecure-bind-address=0.0.0.0
      - --bind-address=0.0.0.0
      - --dashboard-config-path=/etc/karmada/config/dashboard-configmap.yaml
      - --api-proxy-endpoint=http://ml-platform-admin-api:8000
    networks:
      - ml-platform-network
    ports:
      - "3800:8000"
    environment:
      - GIN_MODE=release

networks:
  ml-platform-network:
    driver: bridge

volumes:
  postgres-data:
  etcd-data:
